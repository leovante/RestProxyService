version: '3.5'
services:
  mongo1:
    container_name: rest_proxy_stub_mongodb
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    env_file: .env
    environment:
#      MONGO_INITDB_ROOT_USERNAME: $DB_USERNAME
#      MONGO_INITDB_ROOT_PASSWORD: $DB_PASSWORD
      MONGO_INITDB_DATABASE: $rest_proxy_stub
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 300M

  mongo-express:
    container_name: rest_proxy_stub_mongodb_express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file: .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $DB_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $DB_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo1:27017/
      ME_CONFIG_BASICAUTH: false
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 100M

  rest-proxy-stub:
    container_name: rest_proxy_stub
    image: leovante/rest-proxy-stub
    restart: always
    ports:
      - 24224:8888
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 300M

volumes:
  mongo1_data:
  mongo1_config:
